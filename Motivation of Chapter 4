# Motivation on a simple unbalanced example

set.seed(2)

# initialisation
n=200
ps <- 0.05
CATE <- 1
noise <- rnorm(n, 0, 1)/6

# control group
X <- seq(from=-1, to = 1, length.out = n)
Y <- 1 + 0.5 *(0.05 <= X & X < 0.45) +0.25*(-0.05 <= X & X < 0.05)+0.25*(0.45 <= X & X < 0.55)+ noise
data.contr <- data.frame(X,Y)

# treatment group
X <- seq(from=-1, to = 1, length.out = n*ps)
Y <- 1 + 0.5 *(0.05 <= X & X < 0.45) +0.25*(-0.05 <= X & X < 0.05)+0.25*(0.45 <= X & X < 0.55) + rnorm(n*ps, 0, 1)/6 + CATE
data.treat <- data.frame(X,Y)

# estimated response function under control and treatment
mu1.hat <- lm(Y~X, data = data.treat)

library(segmented)
lin.mod <- lm(Y~X, data = data.contr)
mu0.hat <- segmented(lin.mod, seg.Z = ~X, psi=c(-0.1,0.1,0.4,0.6))

# plot response functions
par(mfrow=c(1,1))
plot(data.contr, ylim = c(min(data.contr$Y, data.treat$Y),max(data.contr$Y, data.treat$Y)), col="red", bty="n",las=1, ann=F)
mtext("X", side=1, line=3, las=1)
lines(data.contr$X, predict(mu0.hat), col="red", lwd= 2)
points(data.treat, col= "blue", pch=16)
lines(data.treat$X, predict(mu1.hat), col="blue", lwd= 2)

legend(0.55, 1.8, legend=c(expression(hat(mu)[1]),expression(hat(mu)[0])),
       col=c("blue", "red"), lty=1, lwd = 2, box.lty = 0, cex=1.3)
legend(0.85, 1.8, legend=c(expression(Y^1), expression(Y^0)),
       col=c("blue", "red"), pch=c(16,1), box.lty = 0,cex=1.3)

# imputed treatment effects
mu0X1.pred <- predict(mu0.hat, newdata = data.treat)
mu1X0.pred <- predict(mu1.hat, newdata = data.contr)
D0 <- mu1X0.pred - data.contr$Y
D1 <- data.treat$Y - mu0X1.pred

# CATE estimates
lin.mod2 <- lm(D0~X, data = data.contr)
tau0.hat <- segmented(lin.mod2, seg.Z = ~X, psi=c(-0.1,0.1,0.4,0.6))
tau1.hat <- lm(D1~X, data = data.treat)

# evaluate CATE on test data
X <- seq(from=-1, to = 1, length.out = 1000)
data.plot <- data.frame(X)
tau0.pred <- predict(tau0.hat, newdata = data.plot)
tau1.pred <- predict(tau1.hat, newdata = data.plot)

CATE.hat <- ps * tau0.pred + (1-ps) * tau1.pred

# plot imputed treatment effects
plot(data.contr$X,D0, ylim = c(min(D0,D1),max(D0,D1)), col="red", bty="n", las=1, ann=F) # pseudo residual for control
mtext("X", side=1, line=3, las=1)
lines(data.contr$X, predict(tau0.hat), col="red", lwd= 2)
points(data.treat$X, D1, col= "blue", pch=16) # pseudo residual for treatment
lines(data.treat$X, predict(tau1.hat), col="blue", lwd= 2)
segments(x0=-1,y0=1,x1=1,y1=1, lty = "dotted") # true CATE

legend(-0.8, 0.6, legend=c(expression(hat(tau)[1]), expression(hat(tau)[0]), expression(tau)),
       col=c("blue", "red", "black"), lty=c(1, 1, 3), lwd= c(2,2,1), box.lty = 0,cex=1.3)
legend(-1, 0.6, legend=c(expression(tilde(D)^1), expression(tilde(D)^0)),
       col=c("blue", "red"), pch=c(16,1), box.lty = 0,cex=1.3)

# mu1 - mu0
mu0X1.t <- predict(mu0.hat, newdata = data.plot)
mu1X0.t <- predict(mu1.hat, newdata = data.plot)

D <- mu1X0.t - mu0X1.t

# plot CATEs
plot(data.contr$X,D0, ylim = c(min(D0,D1),max(D0,D1)), col="red", bty="n", las=1, ann=F) # pseudo residual for control
mtext("X", side=1, line=3, las=1)
points(data.treat$X, D1, col= "blue", pch=16) # pseudo residual for treatment
segments(x0=-1,y0=1,x1=1,y1=1, lty = "dotted") # true CATE
lines(X, CATE.hat, lwd = 2, lty = 1) # X-learner CATE estimate
lines(X, D, lwd= 2, lty = 6) # mu1 - mu0
legend(-0.8, 0.6, legend=c(expression(hat(mu)[1] - hat(mu)[0]), expression(hat(tau)[X]), expression(tau)),
       lty=c(6, 1, 3), lwd= c(2,2,1), box.lty = 0, cex=1.3)
legend(-1, 0.6, legend=c(expression(tilde(D)^1), expression(tilde(D)^0)),
       col=c("blue", "red"), pch=c(16,1), box.lty = 0,cex=1.3)
